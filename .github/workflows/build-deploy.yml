name: Build and deploy .NET application to Container Apps

on:
  push:
    branches:
    - main

env:
  
  # alphanumeric string under 14 characters
  REGISTRY: sjkpmeetupdemoacr
  
  RESOURCE_GROUP_NAME: rg-sjkpmeetupdemo

  # specify your preferred region
  REGION: northeurope

  DOCKER_FILE: DemoApp/Dockerfile
  DOCKER_IMAGE: demoapp 

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Creating resources
      uses: azure/CLI@v1
      with:
        inlineScript: >
          echo "Creating resources"
          az deployment sub create --location ${{ env.REGION}} --template-file /infrastructure/main.bicep --parameters /infrastructure/params.json --debug          
  build:
    runs-on: ubuntu-latest
    needs: provision
    
    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.REGISTRY }}.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.REGISTRY }}.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.REGISTRY }}.azurecr.io <<< "$refresh_token"

    - name: Build image and push it to ACR
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:src/DemoApp"
        push: true
        tags: ${{ env.REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        file: ${{ env.DOCKER_FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Installing Container Apps extension
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt
    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.REGISTRY }}.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.REGISTRY }}.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.REGISTRY }}.azurecr.io <<< "$refresh_token"
    - name: Deploy Container Apps
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az containerapp registry set -n demoapp -g ${{ env.RESOURCE_GROUP_NAME }} --server ${{ env.REGISTRY }}.azurecr.io
          az containerapp update -n "container-app-sjkpmeetupdemo" -g ${{ env.RESOURCE_GROUP_NAME }} -i ${{ env.REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
    - name: logout
      run: >
        az logout
